schema_version: 0.1
type: producer
identifier: avformat
title: FFmpeg Reader
version: 1
copyright: Copyright (C) 2003-2011 Ushodaya Enterprises Limited
license: LGPL
language: en
url: http://www.ffmpeg.org/
creator: Charles Yates
contributor:
  - Dan Dennedy
tags:
  - Audio
  - Video
description: Read an audio and/or video file using FFmpeg
bugs:
  - Audio sync discrepancy with some content.
  - Not all libavformat supported formats are seekable.
  - >
    Seeking is not always accurate. Sometimes it doesn't seek to I-frames so you
    may get junk for a few frames.
  - >
    More than 2 channels of audio more than 16 bits is not supported.

parameters:
  - identifier: argument # 'argument' is a reserved name for a value supplied to the factory
    title: File/URI
    type: string
    description: |
      A file name specification or URL in the form:
      [{protocol}|{format}]:{resource}[?{format-parameter}[&{format-parameter}...]]
      For example, video4linux:/dev/video1?width:320&height:240
      Note: on the bash command line, & must be escaped as '\&'.
      Also, note the use of ':' instead of '=' for parameters.
      Use 'f-list' to see a list of supported file formats.
      Use 'vcodec-list' to see a list of supported video decoders.
      Use 'acodec-list' to see a list of supported audio decoders.
    readonly: no
    required: yes
    mutable: no
    widget: fileopen # could provide a button to use a file-open dialog 

  - identifier: audio_index # the name is the mlt_properties name
    title: Audio index
    type: integer
    description: >
      Choose the index of audio stream to use (-1 is off).
      When this value is equal to the maximum size of a 32-bit signed integer
      or the string "all" then all audio tracks are coalesced into a bundle of
      channels on one audio track.
    readonly: no
    mutable: no
    minimum: -1
    default: 0
    widget: spinner

  - identifier: video_index
    title: Video index
    type: integer
    description: Choose the index of video stream to use (-1 is off)
    readonly: no
    mutable: no
    minimum: -1
    default: 0
    widget: spinner

  - identifier: in
    title: In point
    type: time
    description: Set the start time offset to use within the clip
    readonly: no
    mutable: no
    minimum: 0
    default: 0
    widget: timecode # this is a special form of time value/code entry (e.g. see Kino)

  - identifier: out
    title: Out point
    type: time
    description: Set the ending time offset to use within the clip
    readonly: no
    minimum: 0
    mutable: no
    widget: timecode # as opposed to time, which could be confused for a wallclock-style time widget

  - identifier: threads
    title: Decoding threads
    type: integer
    description: Choose the number of threads to use in the decoder(s)
    readonly: no
    mutable: no
    minimum: 0
    maximum: 4
    default: 1
    widget: spinner
    unit: threads # the unit is a label that appears after the widget

  - identifier: force_aspect_ratio
    title: Sample aspect ratio
    type: float
    description: Optionally override a (mis)detected aspect ratio
    readonly: no
    mutable: yes
    minimum: 0.001 # just a UI suggestion
    maximum: 9.999 # just a suggestion
    # no default property means it should be blank in the UI and not applied unless provided

  - identifier: resource
    title: File/URI
    type: string
    description: file or protocol specification
    readonly: yes

  - identifier: source_fps
    title: Frame rate
    type: float
    scale: 2 # scale is the number of digits to display after the decimal point
    description: the framerate of the resource
    readonly: yes
    unit: frames/second

  - identifier: aspect_ratio
    title: Sample aspect ratio
    description: >
      The sample aspect ratio of the resource.
      This is determined on every frame read.
    readonly: yes

  - identifier: length
    title: Duration
    type: time
    description: duration
    widget: timecode

  - identifier: seekable
    title: Supports seeking
    description: if the resource can seek
    readonly: yes

  - identifier: width
    title: Width
    type: integer
    unit: pixels
    readonly: yes

  - identifier: height
    title: Height
    type: integer
    unit: pixels
    readonly: yes

  - identifier: noimagecache
    title: Disable image caching
    type: integer
    minimum: 0
    maximum: 0
    default: 0
    widget: checkbox

  - identifier: new_seek
    title: Use new seeking
    description: >
      When this is not provided (recommended), it is enabled only for H.264 in
      MPEG-2 Transport Streams.
    type: integer
    minimum: 0
    maximum: 1
    widget: checkbox

  - identifier: force_progressive
    title: Force progressive
    description: When provided, this overrides the detection of progressive video.
    type: integer
    minimum: 0
    maximum: 1
    widget: checkbox

  - identifier: force_tff
    title: Force top field first
    description: When provided, this overrides the detected field order of interlaced video.
    type: integer
    minimum: 0
    maximum: 1
    widget: checkbox

  - identifier: force_fps
    title: Force frame rate
    description: When provided, this attempts to override the detected frame rate of the video.
    type: integer
    minimum: 0
    maximum: 1
    widget: checkbox

  - identifer: force_colorspace
    title: Force colorspace
    description: When provided, this overrides the detected colorspace of the video (Y'CbCr only).
    type: integer
    values:
      - 240 # SMPTE 240M
      - 601 # ITU-R BT.601
      - 709 # ITU-R BT.709
